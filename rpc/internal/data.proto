package internal;

message CopyShardRequest {
  required string Source = 1; 
  required string Dest = 2;
  optional string Database = 3;
  required string Policy = 4;
  required uint64 ShardID = 5;
}

message CopyShardResponse {
  required string Err = 1;
}

message CopyShardStatusRequest {

}

message CopyShardStatusResponse {
  required string Err = 1;
  required string Tasks = 2;
}

message CopyShardStatus {
  required string Source = 1;
  required string Dest = 2;
  required string Database = 3;
  required string Policy = 4;
  required uint64 TotalSize = 5;
  required uint64 currentSize = 6;
  required uint64 StartedAt = 7;
}

message KillCopyShardRequest {
  required string Source = 1;
  required string Dest = 2;
  required uint64 ShardID = 3;
}

message KillCopyShardResponse {
  required string Err = 1;
}

message RemoveShardRequest {
  required string Database = 1;
  required string Policy = 2;
  required uint64 ShardID = 3;
}

message RemoveShardResponse {
  required string Err = 1;
}

message JoinClusterRequest {
  required uint64 NodeId = 1;
  required string NodeAddr = 2;
  required string MetaAddrs = 3;
  required string ImportMetaData = 4;
}

message JoinClusterResponse {
  required uint64 NodeID = 1;
  required string TCPHost = 2;
  required string Err = 3;
}

message LeaveClusterRequest {
  required string NodeAddr = 1;
}

message LeaveClusterResponse {
  required string Err = 1;
}

message WriteShardRequest {
  required uint64 ShardID = 1;
  repeated bytes  Points  = 2;
  optional string Database = 3;
  optional string RetentionPolicy = 4;
}

message WriteShardResponse {
  required int32  Code    = 1;
  optional string Message = 2;
}

message ExecuteStatementRequest {
  required string Statement = 1;
  required string Database  = 2;
}

message ExecuteStatementResponse {
  required int32  Code    = 1;
  optional string Message = 2;
}

message CreateIteratorRequest {
  repeated uint64 ShardIDs = 1;
  required bytes  Opt      = 2;
}

message CreateIteratorResponse {
  optional string Err = 1;
}

message IteratorStats {
  required uint64 SeriesN = 1;
  required bytes PointN = 2;
}

message FieldDimensionsRequest {
  repeated uint64 ShardIDs = 1;
  required bytes  Sources  = 2;
}

message Field {
  required string Name = 1;
  required uint64 Type = 2;
}

message FieldDimensionsResponse {
  repeated string Fields     = 1;
  repeated string Dimensions = 2;
  optional string Err        = 3;
}

message ExpandSourcesRequest {
  repeated uint64 ShardIDs = 1;
  required bytes  Sources = 2;
}

message ExpandSourcesResponse {
  optional bytes  Sources = 1;
  optional string Err = 2;
}

message DownloadShardSnapshotRequest {
  required uint64 ShardID = 1;
  required string Path = 2;
}

message DownloadShardSnapshotResponse {
   optional string Err = 1;
}

message ShardStatusRequest {
  required uint64 ShardID = 1;
}

message ShardStatusResponse {
  required string Err = 1;
  required uint64 Size = 2;
}

message CreateShardSnapshotRequest {
  required uint64 ShardID = 1;
}

message CreateShardSnapshotResponse {
  required string Err = 1;
  required string Path = 2;
  required uint64 Size = 3;
}

message DeleteShardSnapshotRequest {
  required uint64 ShardID = 1;
  required string Path = 2;
}

message DeleteShardSnapshotResponse {
  required string Err = 1;
}

message QueryInfo {
  required uint64 ID = 1;
  required string Query = 2; 
  required string User = 3;
  required string Database = 4;
  required int64 Duration = 5;
}

message ShowQueriesRequest {

}

message ShowQueriesResponse {
  required string Queries = 1;
  required string Err = 2;
}

message KillQueryRequest {
  required uint64 ID = 1;
}

message KillQueryResponse {
  required string Err = 1;
}

message RestoreShardRequest {
  required uint64 ShardID = 1;
  required uint64 Size = 2;
}

message RestoreShardResponse {
  required string Err = 1;
}

message ShowMeasurementsRequest {
  required string Err = 1;
  //Not sure what should be used for Condition, use string for now
  required string Condition = 2;
}

message ShowMeasurementsResponse {
  required string Measurements = 1;
  required string Err = 2;
}

message KeyValue {
  required string Key = 1;
  required string Value = 2;
}

message TagValues {
  required string Measurement = 1;
  required string Values = 2;
}

message ShowTagValuesRequest {
  required string Database = 1;
  required string Condition = 2;
}

message ShowTagValuesResponse {
  required bytes Values = 1;
  required string Err = 2;
}


